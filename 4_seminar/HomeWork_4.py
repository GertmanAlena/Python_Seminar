import os
os.system('CLS')

                        # 1 - Задайте натуральное число N. 
                        # Напишите программу, которая составит список простых множителей числа N.
                        # N = 20 -> [2,5]
                        # N = 30 -> [2, 3, 5]

# def Search_Numbers(number):
#     Simple_Factor = []
#     i=2
#     '''
#     если число делится на i без остатка, то в строке 21 добавляем это число
#     делим на i до тех пор пока число делится на него без остатка
#     но в отдельном цикле, чтобы не записывать одинаковые числа (строки 22-23)
#     если число не делится на i переходим на новое i (строка 25) и возвращаемя на 19 строку
#     последняя проверка, чтобы записать оставшееся от делений число (строка 26)
#     '''
#     while i*i <= number:
#         if number % i == 0:
#             Simple_Factor.append(i)
#             while number % i == 0:
#                 number /= i
#         else:
#             i+=1
#     if number > i:
#         Simple_Factor.append(int(number))      
#     return Simple_Factor
# number = Search_Numbers(int(input('введите число -> ')))
# print(number)

                                # 2 - Задайте последовательность чисел.
                                # Напишите программу, которая выведет список 
                                # неповторяющихся элементов исходной последовательности. 
                                # Не использовать множества.
                                # [1,1,1,1,2,2,2,3,3,3,4] -> [1,2,3,4]

#numbers = [1,1,1,1,2,2,2,3,3,3,4]

#def Sort(number):                
#    Sort_Number = []
#    num = number[0]
#    Sort_Number.append(num)
#    for i in number:
#        if i == num:
#            continue
#        else:
#            num = i
#            Sort_Number.append(i)

#    return Sort_Number
#print(Sort(numbers))

                                # 3 - В файле, содержащем фамилии студентов и их оценки, 
                                # изменить на прописные буквы фамилии тех студентов,
                                # которые имеют средний балл более «4».
# Нужно перезаписать файл.
# Пример:
# Ангела Меркель 5
# Андрей Валетов 5
# Фредди Меркури 3
# Анастасия Пономарева 4

# Программа выдаст:
# АНГЕЛА МЕРКЕЛЬ 5
# АНДРЕЙ ВАЛЕТОВ 5
# Фредди Меркури 3
# Анастасия Пономарева 4
'''
решение в файле Students.py и в students.txt
'''
  
# 4- Шифр Цезаря - это способ шифрования, где каждая буква смещается на определенное количество символов влево или вправо. 
# При расшифровке происходит обратная операция. К примеру, слово "абба" можно зашифровать "бввб" - сдвиг на 1 вправо. 
# "вггв" - сдвиг на 2 вправо, "юяяю" - сдвиг на 2 влево.
# Сдвиг часто называют ключом шифрования.
# Ваша задача - написать функцию, которая записывает в файл шифрованный текст, а также функцию, 
# которая спрашивает ключ, считывает текст и дешифровывает его.

def Сaesar_Сipher(word):

    alphabet_Eng = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'x', 'y', 'z']
    alphabet_Ru = ['а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я']
    cipher_list = [''] 

    for i in range(len(word)):
        if word[i] in alphabet_Eng:
            try:
                cipher_list.append(alphabet_Eng[alphabet_Eng.index(word[i])+2])
            except IndexError:
                print('таких букв нет')
        if word[i] in alphabet_Ru:
            try:
                cipher_list.append(alphabet_Ru[alphabet_Ru.index(word[i])+2])
            except IndexError:
                print('таких букв нет')
    cipher_string="".join(map(str, cipher_list))
    return cipher_string
  
word = input()
print(Сaesar_Сipher(word))


# 5 - Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
# Входные и выходные данные хранятся в отдельных текстовых файлах.
# файл первый:
# AAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCDDDDDDEEEEEFFFFG python is sooooooo coooooool
# файл второй:
# сжатый текст.